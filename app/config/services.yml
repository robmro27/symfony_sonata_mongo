# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value
    sonata.admin.user.class: UserBundle\Admin\Document\UserAdmin 

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]
services:
    # ...
    admin.category:
        class: AppBundle\Admin\CategoryAdmin
        arguments: [~, AppBundle\Document\Category, ~]
        tags:
            - { name: sonata.admin, manager_type: doctrine_mongodb, label: Category, group: Blog }
            
    admin.blog_post:
        class: AppBundle\Admin\BlogPostAdmin
        arguments: [~, AppBundle\Document\BlogPost, ~]
        tags:
            - { name: sonata.admin, manager_type: doctrine_mongodb, label: Blog post,group: Blog }
            
    admin.product_category:
        class: PolcodeProductBundle\Admin\ProductCategoryAdmin
        arguments: [~, PolcodeProductBundle\Document\ProductCategory, ~]
        tags:
            - { name: sonata.admin, manager_type: doctrine_mongodb, label: Categories, group: Products }
            
    admin.product:
        class: PolcodeProductBundle\Admin\ProductAdmin
        arguments: [~, PolcodeProductBundle\Document\Product, ~]
        tags:
            - { name: sonata.admin, manager_type: doctrine_mongodb, label: Products, group: Products }
            
    admin.converter.doctrine.mongodb:
        class: Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter
        arguments: [@doctrine_mongodb]
        tags:
            - { name: request.param_converter }
            
    extension.listener:
        class: PolcodeProductBundle\Listener\DoctrineExtensionListener
        calls:
            - [ setContainer, [ "@service_container" ] ]
        tags:
            # translatable sets locale after router processing
            - { name: kernel.event_listener, event: kernel.request, method: onLateKernelRequest, priority: -10 }
            # loggable hooks user username if one is in security context
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            # translatable sets locale such as default application locale before command execute
            - { name: kernel.event_listener, event: console.command, method: onConsoleCommand, priority: -10 }

    gedmo.listener.translatable:
        class: Gedmo\Translatable\TranslatableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]
            - [ setDefaultLocale, [ %locale% ] ]
            - [ setTranslationFallback, [ false ] ]

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sortable:
        class: Gedmo\Sortable\SortableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.loggable:
        class: Gedmo\Loggable\LoggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]    